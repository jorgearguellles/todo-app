{"version":3,"sources":["utils/TodoContext/index.js","utils/hooks/useLocalStorage.js","components/TodoCounter.js","components/TodoSearch.js","components/TodoList.js","components/TodoItem.js","components/CreateTodoButton.js","components/Modal.js","components/TodoFrom.js","pages/AppUI.js","App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","addTodo","newTodos","push","completeTodo","todoIndex","findIndex","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoFrom","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.a1d0773e.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props){\n\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error\n  } = useLocalStorage('TODOS_V3', []);\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n  if(!searchValue.length >= 1){\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    })\n  }\n\n  // M√©todo para a√±adir un item \n  const addTodo = (text) => {\n    const newTodos = [...todos];\n    newTodos.push(\n      {\n        completed: false,\n        text,\n      }\n    );\n    saveTodos(newTodos);\n  };\n\n  // M√©todo para marcar item como completado\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  // M√©todo para eliminar item \n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex,1);\n    saveTodos(newTodos);\n  };\n\n  return(\n    <TodoContext.Provider value={\n      {\n        error,       \n        loading,     \n        totalTodos, \n        completedTodos,                  \n        searchValue,       \n        setSearchValue,       \n        searchedTodos,        \n        addTodo,       \n        completeTodo,       \n        deleteTodo,\n        openModal,\n        setOpenModal\n      }\n    } >\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n\nexport { TodoContext, TodoProvider };","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage( itemName, initialValue ){\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(\n    () => {\n      setTimeout( () => {\n        try {\n          // Persistencia de datos usando el LocalStorage. JSON.parse & JSON.stringify\n          const localStorageItem = localStorage.getItem(itemName);\n          let parsedItem;\n\n          if(!localStorageItem){\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n          } else {\n            parsedItem = JSON.parse(localStorageItem);\n          };\n\n          setItem(parsedItem);\n          setLoading(false);\n        } catch (error) {\n          setError(error);\n        }\n      },2000);\n    }\n  );\n\n  // Persistencia de datos vinculando la funcionalidad de marcar como hecho y eliminat todo\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error\n  };\n};\n\nexport { useLocalStorage }; ","import React, { useContext } from 'react'\nimport \"../styles/TodoCounter.css\";\nimport { TodoContext } from '../utils/TodoContext';\n\nconst TodoCounter = () => {\n  const {totalTodos, completedTodos} = useContext(TodoContext);  \n\n  return (\n    <h2 className=\"title\">\n      Haz completado {completedTodos} de {totalTodos} TODOs\n    </h2>\n  )\n};\n\nexport default TodoCounter\n","import React, { useContext } from 'react';\nimport { TodoContext } from \"../utils/TodoContext\";\nimport \"../styles/TodoSearch.css\";\n\nconst TodoSearch = () => {\n\n  const {searchValue, setSearchValue} = useContext(TodoContext);\n  \n  const onSearchVelueChange = (event) => {\n    console.log(event.target.value)\n    setSearchValue(event.target.value);\n  }\n\n  return (\n    <input \n      className=\"TodoSearch\"\n      placeholder=\"Busca tu task\" \n      value={searchValue}\n      onChange={onSearchVelueChange}\n    />\n  )\n}\n\nexport default TodoSearch\n","import React from 'react'\nimport \"../styles/TodoList.css\"\n\nconst TodoList = (props) => {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  )\n}\n\nexport default TodoList\n","import '../styles/TodoItem.css';\n\nfunction TodoItem(props) {\n\n  return (\n    <li className=\"TodoItem\">\n      <span \n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      > \t\n        ‚úì\n      </span>\n\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n\n      <span \n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        êÑÇ\n      </span>\n    </li>\n  );\n}\n\nexport default TodoItem ;\n","import React from 'react'\nimport \"../styles/CreateTodoButton.css\";\n\nconst CreateTodoButton = (props) => {\n\n  const onClickButton = () => {\n    props.setOpenModal(prevState => !prevState);\n  };\n\n  return (\n      <button \n        className=\"CreateTodoButton\"\n        onClick={onClickButton}\n      >\n        +\n      </button>\n  )\n}\n\nexport default CreateTodoButton\n","import ReactDOM from 'react-dom';\nimport '../styles/Modal.css';\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">\n      {children}\n    </div>,\n    document.getElementById('modal')\n  );\n}\n\nexport { Modal };","import React, { useState, useContext } from 'react'\nimport { TodoContext } from '../utils/TodoContext';\nimport \"../styles/TodoForm.css\";\n\nconst TodoFrom = () => {\n  const [newTodoValue, setNewTodoValue] = useState('');\n\n  const { addTodo, setOpenModal } = useContext(TodoContext);\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n\n  const onCancel = () => {\n    setOpenModal(false);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    addTodo(newTodoValue);\n    setOpenModal(false);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label> Escribte tu nuevo TODO </label>\n      <textarea \n        placeholder=\"Estudiar para el examen\"\n        onChange={onChange}\n        value={newTodoValue}\n      />\n      <div className=\"TodoForm-buttonContainer\">  \n        <button type=\"button\" onClick={onCancel} className=\"TodoForm-button TodoForm-button-cancel\">Cancelar</button>\n        <button type=\"submit\" className=\"TodoForm-button TodoForm-button-add\" >A√±adir</button>\n      </div>\n    </form>\n  )\n}\n\nexport default TodoFrom;\n","import { useContext } from 'react'\nimport { TodoContext } from '../utils/TodoContext';\nimport TodoCounter from \"../components/TodoCounter\";\nimport TodoSearch from \"../components/TodoSearch\";\nimport TodoList from \"../components/TodoList\";\nimport TodoItem from \"../components/TodoItem\";\nimport CreateTodoButton from \"../components/CreateTodoButton\";\nimport { Modal } from \"../components/Modal\"; \nimport TodoFrom from '../components/TodoFrom';\n\n\nfunction AppUI (){\n\n  const { \n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal\n  } = useContext(TodoContext);\n\n  return (\n    <>\n      <TodoCounter />\n      <TodoSearch />\n      \n      <TodoList>\n        {error && <p>Desesperate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no desesperes...</p>} \n        { (!loading && !searchedTodos.length) && <p>Crea t√∫ primer TODO!</p>}\n\n        {searchedTodos.map(todo => (\n            <TodoItem \n              key={todo.text} \n              text={todo.text} \n              completed={todo.completed}\n              onComplete={() => completeTodo(todo.text)}\n              onDelete={() => deleteTodo(todo.text)}\n            />\n          ))\n        }\n      </TodoList>\n\n      {openModal && (\n        <Modal>\n          <TodoFrom />\n        </Modal>\n      )}\n\n      <CreateTodoButton \n        setOpenModal={setOpenModal}\n      />\n    </>\n  )\n}\n\nexport default AppUI;\n","import AppUI from \"./pages/AppUI\";\nimport { TodoProvider } from \"./utils/TodoContext\"\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n); \n\n"],"sourceRoot":""}